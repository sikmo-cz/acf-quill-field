{"version":3,"file":"main.js","mappings":"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","sources":["webpack://acfQuillFieldPlugin/./src/js/components/loader.js","webpack://acfQuillFieldPlugin/./src/js/components/wpmedia.js","webpack://acfQuillFieldPlugin/./src/js/components/wpmedia-toolbar.js","webpack://acfQuillFieldPlugin/./src/js/components/link.js","webpack://acfQuillFieldPlugin/./src/js/components/customs.js","webpack://acfQuillFieldPlugin/./src/js/main.js"],"sourcesContent":["var loader = {  \n\tobserver: null,\n\tunsavedChanges: false, // Track if there are unsaved changes\n\n\tinit: function () {\n\t\tconst self = this;\n\n\t\tself.initQuillEditors();\n\t\tself.observe();\n\t\tself.setupUnsavedChangesWarning();\n\t\tself.setupSaveListener();\n\t},\n\n\t// Add this new method to set up the beforeunload warning\n\tsetupUnsavedChangesWarning: function() {\n\t\tconst self = this;\n\t\t\n\t\t// Add beforeunload event handler for classic editor\n\t\twindow.addEventListener('beforeunload', function(e) {\n\t\t\tif (self.unsavedChanges) {\n\t\t\t\t// Standard message for unsaved changes\n\t\t\t\tconst message = 'The changes you made will be lost if you navigate away from this page.';\n\t\t\t\te.returnValue = message; // For Chrome\n\t\t\t\treturn message; // For older browsers\n\t\t\t}\n\t\t});\n\t},\n\n\tobserve: function() {\n\t\tconst self = this;\n\t\t// ⚡ Init Quill on dynamic Gutenberg block insertion\n\t\tself.observer = new MutationObserver((mutations) => {\n\t\t\tfor (const mutation of mutations) {\n\t\t\t\t  if (mutation.addedNodes.length > 0) {\n\t\t\t\t\tmutation.addedNodes.forEach((node) => {\n\t\t\t\t\t\t  if (node.nodeType === 1) {\n\t\t\t\t\t\t\tconst quillBlocks = node.querySelectorAll?.('.acf-quill-editor');\n\t\t\t\t\t\t\tif (quillBlocks.length > 0) {\n\t\t\t\t\t\t\t\tself.initQuillEditors();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  }\n\t\t\t\t\t});\n\t\t\t\t  }\n\t\t\t}\n\t\t});\n\t\t  \n\t\tself.observer.observe(document.body, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t});\n\t},\n\n\tinitQuillEditors: function() {\n\t\tconst self = this;\n\t\t//// console.log('Initializing Quill editors');\n\n\t\tdocument.querySelectorAll('.acf-quill-editor').forEach((el) => {\n\t\t\tif (el.dataset.quillInit === 'true') return;\n\t\n\t\t\tconst textarea = el.nextElementSibling;\n\t\t\tif (!textarea) return;\n\n\t\t\tconst acfQuillFieldInput = textarea.parentElement;\n\n\t\t\t// Build toolbar container from configuration\n\t\t\tlet toolbarContainer = self.buildToolbarFromConfig();\n\n\t\t\t// Register a custom Break blot for line breaks BEFORE creating Quill instance\n\t\t\tconst Embed = Quill.import('blots/embed');\n\t\t\tconst Delta = Quill.import('delta');\n\t\t\t\n\t\t\tclass LineBreak extends Embed {\n\t\t\t\tstatic blotName = 'break';\n\t\t\t\tstatic tagName = 'br';\n\t\t\t\t\n\t\t\t\tstatic create() {\n\t\t\t\t\tconst node = super.create();\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic formats() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic value() {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toptimize() {\n\t\t\t\t\tsuper.optimize();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlength() {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tQuill.register(LineBreak, true);\n\n\t\t\t// https://quilljs.com/docs/modules/toolbar\n\t\t\tlet options = {  \n\t\t\t\tmodules: {\n\t\t\t\t\t// syntax: true,\n\t\t\t\t\ttoolbar: {\n\t\t\t\t\t\tcontainer: toolbarContainer,\n\t\t\t\t\t\thandlers: {\n\t\t\t\t\t\t\t// Set custom link handler directly here\n\t\t\t\t\t\t\t'link': function() {\n\t\t\t\t\t\t\t\t//// console.log('Link handler called from toolbar config');\n\t\t\t\t\t\t\t\tif (window.link && window.link.toolbarHandler) {\n\t\t\t\t\t\t\t\t\twindow.link.toolbarHandler.call(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclipboard: {\n\t\t\t\t\t\tmatchVisual: false,  // This can help with some whitespace issues\n\t\t\t\t\t},\n\t\t\t\t\twpImageToolbar: {\n\t\t\t\t\t\t/* optional hook – will run when user clicks \"edit\" */\n\t\t\t\t\t\tonEdit(img, blot, index, quillInstance) {\n\t\t\t\t\t\t\t/* open your wp.media modal here later */\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t },\n\t\t\t\ttheme: 'snow' ,\n\t\t\t\tplaceholder: acf_quill_field.l10n.placeholder,\n\t\t\t};\n\t\n\t\t\t//// console.log('Creating new Quill instance');\n\t\t\tconst quill = new Quill(el, options);\n\t\t\t// Store the instance on the DOM element for later access\n\t\t\tel.__quill = quill;\n\n\t\t\t// Handle Shift+Enter for line breaks (alternative approach)\n\t\t\tconst editorElement = el.querySelector('.ql-editor');\n\t\t\tif (editorElement) {\n\t\t\t\teditorElement.addEventListener('keydown', function(e) {\n\t\t\t\t\tif (e.key === 'Enter' && e.shiftKey) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\te.stopImmediatePropagation();\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst selection = quill.getSelection();\n\t\t\t\t\t\tif (selection) {\n\t\t\t\t\t\t\t// Check if we're at the end of the document\n\t\t\t\t\t\t\tconst length = quill.getLength();\n\t\t\t\t\t\t\tconst isAtEnd = selection.index >= length - 1;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Get current line to check if it's empty\n\t\t\t\t\t\t\tconst [line, offset] = quill.getLine(selection.index);\n\t\t\t\t\t\t\tconst lineText = line ? quill.getText(line.offset(), line.length()) : '';\n\t\t\t\t\t\t\tconst isEmptyLine = lineText.trim() === '';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// If we're at the end and the line is empty, don't add anything\n\t\t\t\t\t\t\tif (isAtEnd && isEmptyLine) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Insert our custom line break blot\n\t\t\t\t\t\t\tquill.insertEmbed(selection.index, 'break', true, 'user');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Move cursor after the line break\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tquill.setSelection(selection.index + 1, 0, 'user');\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}, true);\n\t\t\t}\n\t\t\t\n\t\t\t// Load content with manual BR handling\n\t\t\tconst htmlContent = textarea.value;\n\t\t\tif (htmlContent.trim()) {\n\t\t\t\t// Pre-process HTML to replace BR tags with placeholder\n\t\t\t\tlet processedHtml = htmlContent.replace(/<br\\s*\\/?>/gi, '___LINEBREAK___');\n\t\t\t\t\n\t\t\t\t// Set the content without BR tags first\n\t\t\t\tconst delta = quill.clipboard.convert({ html: processedHtml });\n\t\t\t\tquill.setContents(delta, 'silent');\n\t\t\t\t\n\t\t\t\t// Now manually replace the placeholders with actual line breaks\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tconst currentContents = quill.getContents();\n\t\t\t\t\tconst newOps = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (const op of currentContents.ops) {\n\t\t\t\t\t\tif (op.insert && typeof op.insert === 'string' && op.insert.includes('___LINEBREAK___')) {\n\t\t\t\t\t\t\tconst parts = op.insert.split('___LINEBREAK___');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tfor (let i = 0; i < parts.length; i++) {\n\t\t\t\t\t\t\t\tif (parts[i]) {\n\t\t\t\t\t\t\t\t\tnewOps.push({ insert: parts[i], attributes: op.attributes });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (i < parts.length - 1) {\n\t\t\t\t\t\t\t\t\tnewOps.push({ insert: { break: true } });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewOps.push(op);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (newOps.length > 0) {\n\t\t\t\t\t\tconst newDelta = new Delta(newOps);\n\t\t\t\t\t\tquill.setContents(newDelta, 'silent');\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t}\n\n\t\t\t// Store original text-change handler\n\t\t\tconst originalTextChange = quill.emitter.listeners['text-change'];\n\n\t\t\t// Override text-change to intercept deltas before they're processed\n\t\t\tquill.emitter.listeners['text-change'] = function(delta, oldContents, source) {\n\t\t\t\t// Only modify user input deltas\n\t\t\t\tif (source === 'user') {\n\t\t\t\t\t// Check if delta contains text insertions\n\t\t\t\t\tconst modifiedOps = delta.ops.map(op => {\n\t\t\t\t\t\tif (op.insert && typeof op.insert === 'string') {\n\t\t\t\t\t\t\t// Replace non-breaking spaces with regular spaces in insertions\n\t\t\t\t\t\t\top.insert = op.insert.replace(/\\u00A0/g, ' ');\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn op;\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Create a new delta with modified operations\n\t\t\t\t\tconst modifiedDelta = new Delta(modifiedOps);\n\t\t\t\t\t\n\t\t\t\t\t// Call the original handler with modified delta\n\t\t\t\t\toriginalTextChange(modifiedDelta, oldContents, source);\n\t\t\t\t} else {\n\t\t\t\t\t// For non-user changes, use original handler\n\t\t\t\t\toriginalTextChange(delta, oldContents, source);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\tquill.on('text-change', (delta, oldDelta, source) => {\n\t\t\t\t// Only mark as changed if this is a real user edit, not loading or silent updates\n\t\t\t\tif (source !== 'user') {\n\t\t\t\t\t// Just update word count for non-user changes\n\t\t\t\t\tself.updateWordCount(el, quill);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet htmlOutput = quill.getSemanticHTML();\n\t\t\t\t\n\t\t\t\t// Clean up excessive BR tags\n\t\t\t\thtmlOutput = htmlOutput.replace(/((?:&nbsp;)*)&nbsp;/g, '$1 ');\n\t\t\t\thtmlOutput = htmlOutput.replace(/&quot;/g, '\"');\n\t\t\t\t\n\t\t\t\t// Remove multiple consecutive BR tags anywhere\n\t\t\t\thtmlOutput = htmlOutput.replace(/<br>\\s*<br>/g, '<br>');\n\t\t\t\t\n\t\t\t\t// Remove trailing BR tags in paragraphs\n\t\t\t\thtmlOutput = htmlOutput.replace(/<br>\\s*<\\/p>/g, '</p>');\n\t\t\t\t\n\t\t\t\t// Remove trailing BR tags in headings\n\t\t\t\thtmlOutput = htmlOutput.replace(/<br>\\s*<\\/h([1-6])>/g, '</h$1>');\n\t\t\t\t\n\t\t\t\t// Remove trailing BR tags in list items\n\t\t\t\thtmlOutput = htmlOutput.replace(/<br>\\s*<\\/li>/g, '</li>');\n\t\t\t\t\n\t\t\t\t// Remove empty paragraphs at the end\n\t\t\t\thtmlOutput = htmlOutput.replace(/<p><\\/p>$/, '');\n\t\t\t\thtmlOutput = htmlOutput.replace(/<p><br><\\/p>$/, '');\n\t\t\t\t\n\t\t\t\t// Only update if content actually changed\n\t\t\t\tif (textarea.value !== htmlOutput) {\n\t\t\t\t\ttextarea.value = htmlOutput;\n\t\t\t\t\t\n\t\t\t\t\t// Update word count when text changes\n\t\t\t\t\tself.updateWordCount(el, quill);\n\t\t\t\t\t\n\t\t\t\t\t// Mark that there are unsaved changes for real user changes\n\t\t\t\t\tself.unsavedChanges = true;\n\t\t\t\t\t\n\t\t\t\t\t// Trigger change event on the textarea to signal WordPress\n\t\t\t\t\tself.triggerChange(textarea);\n\t\t\t\t\t\n\t\t\t\t\t// Only notify Gutenberg if we're actually in Gutenberg and content changed significantly\n\t\t\t\t\tif (window.wp && window.wp.data && window.wp.data.select && window.wp.data.select('core/editor')) {\n\t\t\t\t\t\t// We're in Gutenberg - DON'T notify to avoid conflicts\n\t\t\t\t\t\t// Gutenberg will detect changes through other means\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Content didn't change, just update word count\n\t\t\t\t\tself.updateWordCount(el, quill);\n\t\t\t\t}\n\t\t\t});\n\n            // Create and add word count and path containers\n            self.createEditorInfoElements(el, acfQuillFieldInput);\n            \n            // Update word count on initial load\n            self.updateWordCount(el, quill);\n            \n            // Set up selection change tracking for path display\n            quill.on('selection-change', function(range, oldRange, source) {\n                self.updatePathDisplay(el, quill, range);\n            });\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tself.prepareTooltips(acfQuillFieldInput);\n\t\t\t}, 50);\n\t\n\t\t\tel.dataset.quillInit = 'true';\n\t\t});\n\t\t\n\t\t// Signal that editors are initialized\n\t\twindow.acfQuillEditorsLoaded = true;\n\t\tdocument.dispatchEvent(new Event('acf-quill-editors-loaded'));\n\t},\n    \n    // New method to trigger change event on textarea\n    triggerChange: function(textarea) {\n        // Only trigger change events if we're not in Gutenberg\n        // Gutenberg has its own change detection that conflicts with ours\n        if (!window.wp || !window.wp.data || !window.wp.data.select || !window.wp.data.select('core/editor')) {\n            // We're in classic editor - trigger change events normally\n            const changeEvent = new Event('change', { bubbles: true });\n            textarea.dispatchEvent(changeEvent);\n            \n            const inputEvent = new Event('input', { bubbles: true });\n            textarea.dispatchEvent(inputEvent);\n        }\n        // In Gutenberg, we skip triggering change events to avoid conflicts\n    },\n    \n    // Notify Gutenberg of changes using the appropriate API\n    notifyGutenberg: function() {\n        // Only notify if we actually have unsaved changes\n        if (!this.unsavedChanges) return;\n        \n        // Check if we're in Gutenberg editor\n        if (window.wp && window.wp.data && window.wp.data.dispatch) {\n            try {\n                // Mark the post as modified in Gutenberg\n                // This is the stable way to mark content as changed across WP versions\n                window.wp.data.dispatch('core/editor').editPost({ \n                    modified: true \n                });\n            } catch (e) {\n                console.warn('Error notifying Gutenberg of changes', e);\n            }\n        }\n    },\n\n    // Create word count and path display elements\n    createEditorInfoElements: function(editorElement, parentElement) {\n        const self = this;\n\t\tconst aqfL10N = acf_quill_field.l10n;\n        \n        // Create container for editor info (word count and path)\n        const infoContainer = document.createElement('div');\n        infoContainer.className = 'quill-editor-info';\n    \n        // Create word count element\n        const wordCountEl = document.createElement('div');\n        wordCountEl.className = 'quill-word-count';\n        wordCountEl.textContent = `${ aqfL10N.words.word_count }: 0`;\n        \n        // Create path display element\n        const pathDisplayEl = document.createElement('div');\n        pathDisplayEl.className = 'quill-path-display';\n        // pathDisplayEl.textContent = `${ aqfL10N.path.path }: `;\n        \n        // Add elements to container\n        infoContainer.appendChild(wordCountEl);\n        infoContainer.appendChild(pathDisplayEl);\n        \n        // Store references to these elements on the editor for easy access\n        editorElement.wordCountEl = wordCountEl;\n        editorElement.pathDisplayEl = pathDisplayEl;\n        \n        // Find the appropriate place to insert the info container\n        // We want it after the editor but before any other controls\n        const editorContainer = editorElement.closest('.acf-quill-field');\n        const editorWrapper = editorElement.closest('.acf-input');\n        \n        if (editorWrapper) {\n            // Insert after the editor's container\n            editorWrapper.appendChild(infoContainer);\n        } else {\n            // Fallback - insert after the editor element itself\n            editorElement.parentNode.insertBefore(infoContainer, editorElement.nextSibling);\n        }\n    },\n\n    // Update word count for an editor\n    updateWordCount: function(editorElement, quill) {\n        if (!editorElement.wordCountEl) return;\n\n\t\tconst aqfL10N = acf_quill_field.l10n;\n        \n        // Get text content\n        const text = quill.getText();\n        \n        // Calculate word count (split by whitespace and filter out empty strings)\n        const wordCount = text.trim() ? text.trim().split(/\\s+/).length : 0;\n        \n        // Update the word count display\n        editorElement.wordCountEl.textContent = `${aqfL10N.words.word_count}: ${wordCount}`;\n    },\n\n\t// Update path display\n\tupdatePathDisplay: function(editorElement, quill, range) {\n\t\tif (!editorElement.pathDisplayEl || !range) return;\n\t\t\n\t\tlet path = '';\n\t\tconst aqfL10N = acf_quill_field.l10n;\n\t\t\n\t\ttry {\n\t\t\t// Get leaf (lowest-level node) at the current position for more accurate path\n\t\t\tconst [leaf, offset] = quill.getLeaf(range.index);\n\t\t\tif (!leaf) return;\n\t\t\t\n\t\t\t// Build path by traversing up the DOM\n\t\t\tconst pathParts = [];\n\t\t\t\n\t\t\t// Start from the actual DOM node where the cursor is\n\t\t\tlet currentNode = leaf.domNode;\n\t\t\t\n\t\t\t// Handle text nodes - start with parent if we're on a text node\n\t\t\tif (currentNode.nodeType === Node.TEXT_NODE) {\n\t\t\t\tcurrentNode = currentNode.parentNode;\n\t\t\t}\n\t\t\t\n\t\t\t// Traverse up the DOM tree\n\t\t\twhile (currentNode) {\n\t\t\t\t// Skip text nodes and skip the editor container\n\t\t\t\tif (currentNode.nodeType === Node.ELEMENT_NODE && \n\t\t\t\t\t!(currentNode.classList && \n\t\t\t\t\t(currentNode.classList.contains('ql-editor') || \n\t\t\t\t\tcurrentNode.classList.contains('ql-container')))) {\n\t\t\t\t\t\n\t\t\t\t\tlet tagName = currentNode.tagName.toLowerCase();\n\t\t\t\t\tlet displayName = tagName;\n\t\t\t\t\t\n\t\t\t\t\t// Special handling for list elements\n\t\t\t\t\tif (tagName === 'ol') {\n\t\t\t\t\t\t// Check if this is actually a bullet list\n\t\t\t\t\t\tconst listItems = currentNode.querySelectorAll('li');\n\t\t\t\t\t\tconst firstLi = listItems[0];\n\n\t\t\t\t\t\tif (firstLi && firstLi.getAttribute('data-list') === 'bullet') {\n\t\t\t\t\t\t\tdisplayName = 'ul';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: working proplery for infinite nesting, for now 2nd nesting works\n\t\t\t\t\tif( tagName == 'li' && currentNode.classList.value != '' ) {\n\t\t\t\t\t\tif( currentNode.classList.value.includes( 'ql-indent-' ) ) {\n\t\t\t\t\t\t\tlet listType = currentNode.getAttribute( 'data-list' ) == 'bullet' ? 'ul' : 'ol';\n\t\t\t\t\t\t\tdisplayName += ` > ${ listType } > li`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Check for meaningful classes (non-quill classes)\n\t\t\t\t\tconst classNames = Array.from( currentNode.classList || [] ).filter( className => \n\t\t\t\t\t\t! className.startsWith('ql-') && className !== 'ql-editor' &&className !== 'ql-container'\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\tif ( classNames.length > 0 && ! displayName.includes( '.' ) ) {\n\t\t\t\t\t\tdisplayName += `.${classNames.join( '.' )}`;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpathParts.unshift( displayName );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Move up to parent\n\t\t\t\tcurrentNode = currentNode.parentNode;\n\t\t\t\t\n\t\t\t\t// Stop when we reach the editor container\n\t\t\t\tif (currentNode && currentNode.classList && \n\t\t\t\t\t(currentNode.classList.contains('ql-editor') || \n\t\t\t\t\tcurrentNode.classList.contains('ql-container'))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Create the path string\n\t\t\tpath = pathParts.join(' > ');\n\t\t} catch (e) {\n\t\t\tconsole.error('Path display error:', e);\n\t\t\tpath = aqfL10N.path.not_available;\n\t\t}\n\t\t\n\t\t// Update the path display\n\t\teditorElement.pathDisplayEl.textContent = `${aqfL10N.path.path}: ${path || aqfL10N.path.not_available}`;\n\t},\n\n\tprepareTooltips: function( acfQuillFieldInput ) {\n\t\tconst self = this;\n\t\tconst aqfL10N = acf_quill_field.l10n.tooltip;\n\n\t\tconst elementsToAddTooltip = [\n\t\t\t[ '.ql-bold', aqfL10N.bold ],\n\t\t\t[ '.ql-italic', aqfL10N.italic ],\n\t\t\t[ '.ql-underline', aqfL10N.underline ],\n\t\t\t[ '.ql-strike', aqfL10N.strike ],\n\t\t\t[ '.ql-link', aqfL10N.link ],\n\n\t\t\t[ '.ql-color', aqfL10N.color ],\n\t\t\t[ '.ql-background', aqfL10N.background ],\n\n\t\t\t[ '.ql-align[value=\"\"]', aqfL10N.left ],\n\t\t\t[ '.ql-align[value=\"justify\"]', aqfL10N.justify ],\n\t\t\t[ '.ql-align[value=\"center\"]', aqfL10N.center ],\n\t\t\t[ '.ql-align[value=\"right\"]', aqfL10N.right ],\n\n\t\t\t[ '.ql-list[value=\"bullet\"]', aqfL10N.ul ],\n\t\t\t[ '.ql-list[value=\"ordered\"]', aqfL10N.ol ],\n\n\t\t\t[ '.ql-indent[value=\"+1\"]', aqfL10N.indent_plus ],\n\t\t\t[ '.ql-indent[value=\"-1\"]', aqfL10N.indent_minus ],\n\n\t\t\t[ '.ql-script[value=\"super\"]', aqfL10N.script_sup ],\n\t\t\t[ '.ql-script[value=\"sub\"]', aqfL10N.script_sub ],\n\n\t\t\t[ '.ql-blockquote', aqfL10N.blockquote ],\n\t\t\t[ '.ql-code', aqfL10N.code ],\n\t\t\t[ '.ql-code-block', aqfL10N.code_block ],\n\n\t\t\t[ '.ql-clean', aqfL10N.clean ],\n\n\t\t\t[ '.ql-wp-media', aqfL10N.wp_media ],\n\t\t]\n\n\t\telementsToAddTooltip.forEach((item) => {\n\t\t\tself.acfQuillFieldAddTooltip(acfQuillFieldInput.querySelector(item[0]), item[1])\n\t\t});\n\t},\n\n\tacfQuillFieldAddTooltip: function(element, text) {\n\t\tif (!element) return;\n\t\telement.setAttribute('aria-label', text);\n\t\telement.setAttribute('data-balloon-pos', 'up');\n\t},\n\n\tbuildToolbarFromConfig: function() {\n\t\t// Default toolbar if nothing is configured\n\t\tconst defaultToolbar = [\n\t\t\t[{ 'header': [ 1, 2, 3, 4, 5, 6, false ] }],\n\t\t\t[ 'bold', 'italic', 'underline', 'strike', 'link' ],\n\t\t\t[{ 'color': [] }, { 'background': [] }],\n\t\t\t[{ 'align': ''}, { 'align': 'center'}, {'align': 'right'}, {'align': 'justify'}],\n\t\t\t[{ 'list': 'ordered'}, { 'list': 'bullet' }],\n\t\t\t[{ 'indent': '-1' }, { 'indent': '+1' }],\n\t\t\t[{ 'script': 'super' }, { 'script': 'sub' }],\n\t\t\t[ 'blockquote', 'code' ],\n\t\t\t[ 'code-block' ],\n\t\t\t[ 'clean' ],\n\t\t\t[{ 'wp-media': true }]\n\t\t];\n\t\t\n\t\t// If no config is provided, return default\n\t\tif (!window.acf_quill_field || !window.acf_quill_field.toolbar_config) {\n\t\t\treturn defaultToolbar;\n\t\t}\n\t\t\n\t\tif (!window.acf_quill_field || !window.acf_quill_field.load_toolbar_config) {\n\t\t\treturn defaultToolbar;\n\t\t}\n\t\t\n\t\t// Process the toolbar configuration\n\t\ttry {\n\t\t\tconst config = window.acf_quill_field.toolbar_config;\n\t\t\tconst formatOptions = window.acf_quill_field.format_options || {};\n\t\t\t\n\t\t\t// Transform the config into Quill's expected format\n\t\t\treturn config.map(group => {\n\t\t\t\treturn group.map(item => {\n\t\t\t\t\t// Simple button (bold, italic, etc.)\n\t\t\t\t\tif (typeof item === 'string') {\n\t\t\t\t\t\t// Special case for wp-media which needs a boolean value\n\t\t\t\t\t\tif (item === 'wp-media') {\n\t\t\t\t\t\t\treturn { 'wp-media': true };\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Check if this is a format that needs options\n\t\t\t\t\t\tif (formatOptions[item]) {\n\t\t\t\t\t\t\t// Create object with format options\n\t\t\t\t\t\t\tconst obj = {};\n\t\t\t\t\t\t\tobj[item] = formatOptions[item];\n\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Regular button\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Item is already an object (custom format)\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconsole.error('Error building toolbar:', e);\n\t\t\treturn defaultToolbar;\n\t\t}\n\t},\n    \n    // Method to reset the unsaved changes flag (call this after saving)\n    resetUnsavedChanges: function() {\n        this.unsavedChanges = false;\n    },\n    \n    // Setup a listener for save events (both Gutenberg and Classic Editor)\n    setupSaveListener: function() {\n        const self = this;\n        \n        // === CLASSIC EDITOR SAVE DETECTION ===\n        // Listen for form submission (when user saves/updates post)\n        document.addEventListener('submit', function(e) {\n            // Check if this is a WordPress admin form (post edit, etc.)\n            if (e.target && (e.target.id === 'post' || e.target.classList.contains('wp-admin') || (e.target.action && e.target.action.includes('post.php')))) {\n                // console.log('WordPress form submission detected - resetting unsaved changes');\n                self.resetUnsavedChanges();\n            }\n        });\n        \n        // Listen for save button clicks specifically\n        document.addEventListener('click', function(e) {\n            // Check for various WordPress save/publish buttons\n            if (e.target && (\n                e.target.id === 'publish' || \n                e.target.id === 'save-post' || \n                e.target.name === 'save' || \n                e.target.name === 'publish' ||\n                e.target.classList.contains('button-primary')\n            )) {\n                // console.log('WordPress save button clicked - resetting unsaved changes');\n                // Small delay to let the save process start\n                setTimeout(() => {\n                    self.resetUnsavedChanges();\n                }, 500);\n            }\n        });\n        \n        // === GUTENBERG SAVE DETECTION ===\n        // Check if we're in Gutenberg editor\n        if (!window.wp || !window.wp.data || !window.wp.data.subscribe) {\n            // Not in Gutenberg, skip Gutenberg-specific setup\n            // console.log('Gutenberg API not detected, using classic editor save detection only');\n            return;\n        }\n        \n        // Reset unsaved changes when page loads (in case of browser back/forward)\n        setTimeout(() => {\n            self.resetUnsavedChanges();\n        }, 1000);\n        \n        // Wait for Gutenberg to be ready\n        const setupListener = function() {\n            let wasSaving = false;\n            let wasAutosaving = false;\n            \n            // Subscribe to changes in the editor state\n            window.wp.data.subscribe(function() {\n                // Make sure editor data store is available\n                if (!window.wp.data.select('core/editor')) return;\n                \n                try {\n                    // Use multiple methods to detect saving state\n                    const isSaving = window.wp.data.select('core/editor').isSavingPost();\n                    const isAutosaving = window.wp.data.select('core/editor').isAutosavingPost();\n                    \n                    // Detect when any type of save completes\n                    if ((wasSaving && !isSaving) || (wasAutosaving && !isAutosaving)) {\n                        // Add a longer delay to ensure all async operations complete\n                        setTimeout(() => {\n                            self.resetUnsavedChanges();\n                            // console.log('Gutenberg save completed, unsaved changes reset');\n                        }, 1000);\n                    }\n                    \n                    // Update previous states\n                    wasSaving = isSaving;\n                    wasAutosaving = isAutosaving;\n                } catch (e) {\n                    console.warn('Error checking save status:', e);\n                }\n            });\n            \n            // console.log('Gutenberg save listener set up successfully');\n        };\n        \n        // If editor is already loaded\n        if (window.wp.data.select('core/editor')) {\n            setupListener();\n        } else {\n            // Wait for editor to be ready\n            const checkEditorReady = setInterval(function() {\n                if (window.wp.data.select('core/editor')) {\n                    clearInterval(checkEditorReady);\n                    setupListener();\n                }\n            }, 200);\n            \n            // Don't wait forever - clear interval after 5 seconds\n            setTimeout(function() {\n                clearInterval(checkEditorReady);\n                // console.log('Gave up waiting for editor data store');\n            }, 5000);\n        }\n    }\n}\n\nexport { loader };","var WPMedia = {  \n\twpmediaIcon: '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" color=\"#000000\" fill=\"none\"> <path class=\"ql-stroke\" d=\"M2.5 16.502L7.46967 11.5323C7.80923 11.1927 8.26978 11.002 8.75 11.002C9.23022 11.002 9.69077 11.1927 10.0303 11.5323L14 15.502M15.5 17.002L14 15.502M21.5 16.502L18.5303 13.5323C18.1908 13.1927 17.7302 13.002 17.25 13.002C16.7698 13.002 16.3092 13.1927 15.9697 13.5323L14 15.502\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path class=\"ql-stroke\" d=\"M15.5 8.00195C15.7761 8.00195 16 7.7781 16 7.50195C16 7.22581 15.7761 7.00195 15.5 7.00195M15.5 8.00195C15.2239 8.00195 15 7.7781 15 7.50195C15 7.22581 15.2239 7.00195 15.5 7.00195M15.5 8.00195V7.00195\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path class=\"ql-stroke\" d=\"M21.5 19.502V4.50195C21.5 3.39738 20.6046 2.50195 19.5 2.50195H4.5C3.39543 2.50195 2.5 3.39738 2.5 4.50195V19.502C2.5 20.6065 3.39543 21.502 4.5 21.502H19.5C20.6046 21.502 21.5 20.6065 21.5 19.502Z\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>',\n\n\tinit: function () {\t\t\n\t\tconst self = this;\n\n\t\tconst Toolbar = Quill.import('modules/toolbar');\n\t\tconst BaseImage = Quill.import('formats/image');   // <- inline image that Quill ships\n\t\tconst icons = Quill.import('ui/icons');\n\n\t\t/* ----------------------------------------------------------\n\t\t* 1.  Drop your custom SVG into Quill’s icon registry\n\t\t* --------------------------------------------------------- */\n\t\ticons['wp-media'] = self.wpmediaIcon;\n\n\t\tclass WPImageBlot extends BaseImage {\n\t\t\tstatic blotName = 'wpimage';      // keep our own name\n\t\t\tstatic tagName  = 'img';          // same as before\n\n\t\t\tstatic create(value = {}) {\n\t\t\t\t// the core Image blot already creates <img src=\"…\">\n\t\t\t\tconst node = super.create(value.src || value);\n\n\t\t\t\t// copy every WP attribute over\n\t\t\t\tObject.entries(value).forEach(([k, v]) => {\n\t\t\t\tif (v != null) node.setAttribute(k, v);\n\t\t\t\t});\n\t\t\t\treturn node;\n\t\t\t}\n\n\t\t\tstatic value(node) {\n\t\t\t\treturn Array.from(node.attributes).reduce((o, a) => {\n\t\t\t\to[a.name] = a.value;\n\t\t\t\treturn o;\n\t\t\t\t}, {});\n\t\t\t}\n\t\t}\n\n\t\tQuill.register(WPImageBlot, true);  // ‘true’ = overwrite if it exists\n\n\t\t// ---------- 2. Add a toolbar button ----------\n\t\tToolbar.DEFAULTS['handlers']['wp-media'] = self.openMedia;\n\t},\n\n\topenMedia: function() {\n\t\tconst quill = this.quill;\n\t\tconst range = quill.getSelection(true);\n\t\n\t\tconst frame = wp.media({\n\t\t\tframe   : 'post',          // gives Attachment Display Settings\n\t\t\tstate   : 'insert',\n\t\t\tlibrary : { type: 'image' },\n\t\t\tmultiple: false\n\t\t});\n\n\t\tframe.$el.addClass( 'acf-quill-field-add-media' );\n\t\n\t\tframe.on('insert', () => {\n\t\t\t/* --------------------------------------------------\n\t\t\t* 1. Attachment & display settings\n\t\t\t* -------------------------------------------------- */\n\t\t\tconst state      = frame.state();\n\t\t\tconst attachment = state.get('selection').first();   // we allowed only one\n\t\t\tif ( ! attachment ) return;\n\t\t\n\t\t\tconst atts = attachment.toJSON();\n\t\t\n\t\t\tlet display \t= state.display( attachment ).toJSON();  // align, size, link-to…\n\t\t\tlet linkToFile \t= display.link == 'file' ? atts.url : false;\n\n\t\t\tdisplay     \t= wp.media.string.props( display, attachment );\n\t\t\tdisplay.linkUrl = linkToFile === false ? display.linkUrl : linkToFile;\n\t\t\n\t\t\t/* --------------------------------------------------\n\t\t\t* 2. Resolve the URL & dimensions for the chosen size\n\t\t\t*    (falls back to full size if that size doesn’t exist,\n\t\t\t*     e.g. for an SVG)\n\t\t\t* -------------------------------------------------- */\n\t\t\tconst sizeData  = atts?.sizes?.[ display.size ] || atts;\n\t\t\tconst attrs = {\n\t\t\t\tsrc               : sizeData.url,\n\t\t\t\twidth             : sizeData.width,\n\t\t\t\theight            : sizeData.height,\n\t\t\t\talt               : atts.alt,\n\t\t\t\ttitle             : atts.title,\n\t\t\t\tclass             : `align${display.align || 'none'} size-${display.size} wp-image-${atts.id}`,\n\t\t\t\t// 'data-wp-media-id': atts.id,\n\t\t\t};\n\t\t\n\t\t\t/* --------------------------------------------------\n\t\t\t* 3. Insert the image blot + newline => <p><img></p>\n\t\t\t* -------------------------------------------------- */\n\t\t\tquill.insertEmbed(range.index, 'wpimage', attrs, 'user');\n\t\t\tquill.insertText(range.index + 1, '\\n', 'user');\n\t\t\n\t\t\t/* --------------------------------------------------\n\t\t\t* 4. Wrap with <a href=\"…\"> if the user chose a link\n\t\t\t* -------------------------------------------------- */\n\t\t\tif ( display.linkUrl && display.linkUrl !== 'none' ) {\n\t\t\t\tquill.formatText(range.index, 1, { link: display.linkUrl }, 'user');\n\t\t\t}\n\t\t\n\t\t\t/* Caret after the image */\n\t\t\tquill.setSelection(range.index + 2, 0);\n\t\t});\n\t\n\t\tframe.open();\n\t}\n}\n\nexport { WPMedia };","var WPMediaToolbar = {  \n\tdataBalloon: 'data-balloon-pos=\"up\"',\n\ticonList: {\n\t\tAlignNone: '<svg viewBox=\"0 0 18 18\"><line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line><line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"14\" y2=\"14\"></line><line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"4\" y2=\"4\"></line></svg>',\n\t\tAlignLeft: '<svg viewBox=\"0 0 18 18\"><line class=\"ql-stroke\" x1=\"3\" x2=\"15\" y1=\"9\" y2=\"9\"></line><line class=\"ql-stroke\" x1=\"3\" x2=\"13\" y1=\"14\" y2=\"14\"></line><line class=\"ql-stroke\" x1=\"3\" x2=\"9\" y1=\"4\" y2=\"4\"></line></svg>',\n\t\tAlignCenter: '<svg viewBox=\"0 0 18 18\"><line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line><line class=\"ql-stroke\" x1=\"14\" x2=\"4\" y1=\"14\" y2=\"14\"></line><line class=\"ql-stroke\" x1=\"12\" x2=\"6\" y1=\"4\" y2=\"4\"></line></svg>',\n\t\tAlignRight: '<svg viewBox=\"0 0 18 18\"><line class=\"ql-stroke\" x1=\"15\" x2=\"3\" y1=\"9\" y2=\"9\"></line><line class=\"ql-stroke\" x1=\"15\" x2=\"5\" y1=\"14\" y2=\"14\"></line><line class=\"ql-stroke\" x1=\"15\" x2=\"9\" y1=\"4\" y2=\"4\"></line></svg>',\n\t\tEdit: '<svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" color=\"#000000\" fill=\"none\"> <path class=\"ql-stroke\" d=\"M3.5 17.1213V20.5H6.87868C7.2765 20.5 7.65804 20.342 7.93934 20.0607L20.06 7.93934C20.6458 7.35355 20.6458 6.40381 20.06 5.81802L18.1813 3.93934C17.5955 3.35355 16.6458 3.35355 16.06 3.93934L3.93934 16.0607C3.65804 16.342 3.5 16.7235 3.5 17.1213Z\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" /> <path class=\"ql-stroke\" d=\"M13.5002 6.49902L17.5002 10.499\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" /> </svg>',\n\t\tRemove: '<svg viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" color=\"#000000\" fill=\"none\"> <path class=\"ql-stroke\" d=\"M19.5 5.5L18.6139 20.121C18.5499 21.1766 17.6751 22 16.6175 22H7.38246C6.32488 22 5.4501 21.1766 5.38612 20.121L4.5 5.5\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path class=\"ql-stroke\" d=\"M3 5.5H8M21 5.5H16M16 5.5L14.7597 2.60608C14.6022 2.2384 14.2406 2 13.8406 2H10.1594C9.75937 2 9.39783 2.2384 9.24025 2.60608L8 5.5M16 5.5H8\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path class=\"ql-stroke\" d=\"M9.5 16.5L9.5 10.5\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path> <path class=\"ql-stroke\" d=\"M14.5 16.5L14.5 10.5\" stroke=\"#000000\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg>'\n\t},\n\n\tinit: function () {\n\t\tconst self \t\t= this;\n\t\tconst Tooltip   = Quill.import( 'ui/tooltip' );\n\n\t\tclass WPImageToolbar extends Tooltip {\n\t\t\tconstructor(quill, options = {}) {\n\t\t\t\t// Tooltip expects (quill, boundsElement) as arguments\n\t\t\t\tsuper(quill, options.bounds || quill.root.parentNode);\n\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* use this.root, because Tooltip created it\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tthis.root.classList.add( 'ql-wpmedia-toolbar' ); // 'ql-tooltip' already set\n\t\t\t\tthis.root.innerHTML = `\n\t\t\t\t\t<span class=\"ql-formats\">\n\t\t\t\t\t\t<button class=\"ql-align\" aria-label=\"${ acf_quill_field.l10n.tooltip.none }\" ${ self.dataBalloon } data-align=\"\" title=\"None\">\n\t\t\t\t\t\t\t${self.iconList.AlignNone}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"ql-align\" aria-label=\"${ acf_quill_field.l10n.tooltip.left }\" ${ self.dataBalloon } data-align=\"left\" title=\"Left\">\n\t\t\t\t\t\t\t${self.iconList.AlignLeft}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"ql-align\" aria-label=\"${ acf_quill_field.l10n.tooltip.center }\" ${ self.dataBalloon } data-align=\"center\" title=\"Center\">\n\t\t\t\t\t\t\t${self.iconList.AlignCenter}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button class=\"ql-align\" aria-label=\"${ acf_quill_field.l10n.tooltip.right }\" ${ self.dataBalloon } data-align=\"right\" title=\"Right\">\n\t\t\t\t\t\t\t${self.iconList.AlignRight}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t\t<button class=\"edit\" aria-label=\"${ acf_quill_field.l10n.tooltip.edit }\" ${ self.dataBalloon } title=\"Edit\">\n\t\t\t\t\t\t${self.iconList.Edit}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"remove\" aria-label=\"${ acf_quill_field.l10n.tooltip.delete }\" ${ self.dataBalloon } title=\"Remove\">\n\t\t\t\t\t\t${self.iconList.Remove}\n\t\t\t\t\t</button>\n\t\t\t\t`;\n\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* cache buttons\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tthis.alignBtns = Array.from(this.root.querySelectorAll('.ql-align'));\n\t\t\t\tconst btnEdit   = this.root.querySelector('.edit');\n\t\t\t\tconst btnRemove = this.root.querySelector('.remove');\n\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* Listen for clicks inside the editor\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tquill.root.addEventListener('click', e => {\n\t\t\t\t\tconst img = e.target.closest('img[class*=\"wp-image-\"]');\n\t\t\t\t\tif (img) {\n\t\t\t\t\t\tthis.img   = img;\n\t\t\t\t\t\tthis.blot  = Quill.find(img);\n\t\t\t\t\t\tthis.index = this.blot.offset(quill.scroll);\n\t\t\t\t\t\tthis._updateActiveAlign();\n\t\t\t\t\t\tthis._position();\n\t\t\t\t\t\t\n\t\t\t\t\t\tself.hideLinkToolTip();\n\t\t\t\t\t\tthis.show();\n\t\t\t\t\t\trequestAnimationFrame(() => this._position());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\tself.hideMediaFocus( document.querySelector( 'img.in-focus' ) );\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* Alignment buttons\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tthis.alignBtns.forEach(btn => {\n\t\t\t\t\tbtn.addEventListener('click', e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst value   = btn.dataset.align || false;\n\t\t\t\t\tconst classes = ['alignnone','alignleft','aligncenter','alignright'];\n\n\t\t\t\t\tclasses.forEach(c => this.img.classList.remove(c));\n\t\t\t\t\t\tthis.img.classList.add(value ? `align${value}` : 'alignnone');\n\t\t\t\t\t\tquill.formatLine(this.index, 1, { align: value || false }, 'user');\n\t\t\t\t\t\tthis._updateActiveAlign();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* Remove button\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tbtnRemove.addEventListener('click', e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tquill.deleteText(this.index, 2, 'user');      // blot + newline\n\t\t\t\t\tthis.hide();\n\t\t\t\t});\n\t\t\t\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* Edit button\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tbtnEdit.addEventListener('click', e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t// native “Image Details” modal + live replace\n\t\t\t\t\tself.openImageDetails( this.img, this.blot, this.index, quill );\n\t\t\t\t\tthis.hide();\n\t\t\t\t});\n\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* hide the image-toolbar when user clicks anywhere outside\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tdocument.addEventListener( 'click', e => {\n\t\t\t\t\tif ( this.root.style.display !== 'none' && ! quill.root.contains( e.target ) && ( e.target ) ) {\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\tself.hideMediaFocus( document.querySelector( 'img.in-focus' ) );\n\t\t\t\t\t}\n\t\t\t\t}, true );\n\n\t\t\t\t/* ----------------------------------------------------------\n\t\t\t\t* Keep tooltip stuck to image while scrolling / resizing\n\t\t\t\t* --------------------------------------------------------- */\n\t\t\t\tconst reposition = () => this.img && this.root.style.display !== 'none' && this._position();\n\n\t\t\t\tquill.root.parentNode.addEventListener('scroll', reposition, { passive:true });\n\t\t\t\twindow.addEventListener('scroll', reposition, { passive:true });\n\t\t\t\twindow.addEventListener('resize', reposition);\n\t\t\t\tquill.on('text-change', reposition);\n\t\t\t}\n\n\t\t\t/* ----------------------------------------------------------\n\t\t\t* Make the correct alignment button look “pressed”\n\t\t\t* --------------------------------------------------------- */\n\t\t\t_updateActiveAlign() {\n\t\t\t\tconst current = (/align(left|center|right)/.exec(this.img.className)||[])[1] || '';\n\t\t\t\tthis.alignBtns.forEach(btn => btn.classList.toggle('ql-active', btn.dataset.align === current));\n\t\t\t}\n\n\t\t\t/* ----------------------------------------------------------\n\t\t\t* geometry\n\t\t\t* --------------------------------------------------------- */\n\t\t\t_position() {\n\t\t\t\tconst imgRect    = this.img.getBoundingClientRect();\n\t\t\t\tconst boundsRect = this.quill.root.parentNode.getBoundingClientRect();\n\t\t\t\n\t\t\t\tthis.root.style.left = imgRect.left - boundsRect.left + imgRect.width / 2 - this.root.offsetWidth / 2 + 'px';\n\t\t\t\tthis.root.style.top  = imgRect.top  - boundsRect.top  - this.root.offsetHeight - 10 + 'px';\n\n\t\t\t\tif( ! this.quill.root.parentNode.querySelector( '.ql-wpmedia-toolbar' ).classList.contains( 'ql-hidden' ) ) {\n\t\t\t\t\tthis.img.classList.add( 'in-focus' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* ----------------------------------------------------------------\n\t\t* Register the module so Quill can load it with modules:{…}\n\t\t* ---------------------------------------------------------------- */\n\t\tQuill.register( 'modules/wpImageToolbar', WPImageToolbar );\n\t},\n\n\thideLinkToolTip: function () {\n\t\tconst elements = document.querySelectorAll( '.ql-tooltip.ql-flip:not( .ql-hidden )' );\n\t\telements.forEach( item => {\n\t\t\titem.classList.add( 'ql-hidden' );\n\t\t});\n\t},\n\n\thideMediaFocus: function ( element ) {\n\t\tif( ! element ) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\telement.classList.remove( 'in-focus' );\n\t},\n\t\n\thideMediaTooltip: function () {\n\t\tconst elements = document.querySelectorAll( '.ql-tooltip.ql-flip:not( .ql-hidden )' );\n\t\telements.forEach( item => {\n\t\t\titem.classList.add( 'ql-hidden' );\n\t\t});\n\t},\n\n\t/**\n\t * Extract the numeric ID that follows “wp-image-”.\n\t * @param {string} str - any input string\n\t * @returns {number}  - the found ID, or 0 if none\n\t */\n\tgetWpImageId: function (str) {\n\t\tconst match = str.match(/wp-image-(\\d+)/);   // look for “wp-image-<digits>”\n\t\treturn match ? Number( match[1]) : 0;\n\t},\n\n\topenImageDetails: function(imgNode, blot, blotIndex, quill) {\n\t\tconst self = this;\n\t\n\t\t// 1. Get current attachment ID from the class\n\t\tconst id = self.getWpImageId(imgNode.classList.value);\n\t\n\t\tif (!id) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// 2. Extract existing attributes from the image node\n\t\tconst currentAttrs = {\n\t\t\turl: imgNode.getAttribute('src') || '',\n\t\t\talt: imgNode.getAttribute('alt') || '',\n\t\t\ttitle: imgNode.getAttribute('title') || '',\n\t\t\twidth: imgNode.getAttribute('width') || '',\n\t\t\theight: imgNode.getAttribute('height') || '',\n\t\t\textraClasses: self.getExtraClasses(imgNode.classList.value),\n\t\t};\n\t\n\t\t// 3. Check if image is inside a link\n\t\tconst linkAttrs = self.getLinkAttributes(imgNode, quill);\n\t\t\n\t\t// 4. Determine current alignment\n\t\tconst alignMatch = imgNode.className.match(/align(left|right|center|none)/);\n\t\tconst align = alignMatch ? alignMatch[1] : 'none';\n\t\t\n\t\t// 5. Determine current size\n\t\tconst sizeMatch = imgNode.className.match(/size-([^\\s]+)/);\n\t\tconst size = sizeMatch ? sizeMatch[1] : 'full';\n\t\n\t\t// 6. Fetch the attachment from WordPress media library\n\t\tconst attachment = wp.media.attachment(id);\n\t\n\t\tattachment.fetch().done(() => {\n\t\t\t// Create a frame for the image details\n\t\t\tconst frame = wp.media({\n\t\t\t\tframe: 'image',\n\t\t\t\tstate: 'image-details',\n\t\t\t\tediting: true,\n\t\t\t\tmultiple: false,\n\t\t\t\tmetadata: {\n\t\t\t\t\tattachment_id: id,\n\t\t\t\t\turl: currentAttrs.url,\n\t\t\t\t\talt: currentAttrs.alt,\n\t\t\t\t\ttitle: currentAttrs.title,\n\t\t\t\t\tcaption: currentAttrs.title, // Use title as caption if available\n\t\t\t\t\talign: align,\n\t\t\t\t\tsize: size,\n\t\t\t\t\twidth: currentAttrs.width,\n\t\t\t\t\theight: currentAttrs.height,\n\t\t\t\t\textraClasses: currentAttrs.extraClasses, // Add extra classes to metadata\n\t\t\t\t\t// Pass link settings if available\n\t\t\t\t\tlinkUrl: linkAttrs.url || '',\n\t\t\t\t\tlinkTarget: linkAttrs.target ? '_blank' : '',\n\t\t\t\t\tlinkRel: linkAttrs.rel || '',\n\t\t\t\t\tlinkClass: linkAttrs.class || ''\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tframe.$el.addClass('acf-quill-field-edit-media');\n\t\n\t\t\t// After frame is open, we need to set the advanced field values that aren't \n\t\t\t// automatically populated from metadata\n\t\t\tframe.on('open', function() {\n\t\t\t\t// Wait a moment for the frame to fully initialize\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Target new tab checkbox if we have a link with target=\"_blank\"\n\t\t\t\t\t\tif (linkAttrs.target === '_blank') {\n\t\t\t\t\t\t\tconst targetCheckbox = frame.$el.find('input[type=\"checkbox\"][data-setting=\"linkTargetBlank\"]');\n\t\t\t\t\t\t\tif (targetCheckbox.length) {\n\t\t\t\t\t\t\t\ttargetCheckbox.prop('checked', true).trigger('change');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Set CSS classes for the image\n\t\t\t\t\t\tif (currentAttrs.extraClasses) {\n\t\t\t\t\t\t\tconst extraClassesInput = frame.$el.find('input[data-setting=\"extraClasses\"]');\n\t\t\t\t\t\t\tif (extraClassesInput.length) {\n\t\t\t\t\t\t\t\textraClassesInput.val(currentAttrs.extraClasses).trigger('change');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Set link CSS class - try multiple selectors as WordPress might use different field names\n\t\t\t\t\t\tif (linkAttrs.class) {\n\t\t\t\t\t\t\t// Try different possible selectors for the link class field\n\t\t\t\t\t\t\tconst possibleSelectors = [\n\t\t\t\t\t\t\t\t'input[data-setting=\"linkClass\"]',\n\t\t\t\t\t\t\t\t'input[data-setting=\"linkClassName\"]',\n\t\t\t\t\t\t\t\t'input[name=\"linkClass\"]',\n\t\t\t\t\t\t\t\t'input.link-class',\n\t\t\t\t\t\t\t\t'input.link-class-name',\n\t\t\t\t\t\t\t\t'input[id*=\"linkclass\"]',\n\t\t\t\t\t\t\t\t'input[id*=\"link-class\"]'\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet linkClassInput = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Try each selector until we find the field\n\t\t\t\t\t\t\tfor (const selector of possibleSelectors) {\n\t\t\t\t\t\t\t\tconst input = frame.$el.find(selector);\n\t\t\t\t\t\t\t\tif (input.length) {\n\t\t\t\t\t\t\t\t\tlinkClassInput = input;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// If found, set the value\n\t\t\t\t\t\t\tif (linkClassInput) {\n\t\t\t\t\t\t\t\tlinkClassInput.val(linkAttrs.class).trigger('change');\n\t\t\t\t\t\t\t\tconsole.log('Set link class to', linkAttrs.class);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// If we can't find the field, try setting it on the model directly\n\t\t\t\t\t\t\t\tif (frame.state && frame.state().props) {\n\t\t\t\t\t\t\t\t\tframe.state().props.set('linkClass', linkAttrs.class);\n\t\t\t\t\t\t\t\t\tconsole.log('Set link class on model to', linkAttrs.class);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Set link title/title attribute\n\t\t\t\t\t\tif (linkAttrs.title) {\n\t\t\t\t\t\t\tconst linkTitleInput = frame.$el.find('input[data-setting=\"linkTitle\"]');\n\t\t\t\t\t\t\tif (linkTitleInput.length) {\n\t\t\t\t\t\t\t\tlinkTitleInput.val(linkAttrs.title).trigger('change');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Set rel attribute\n\t\t\t\t\t\tif (linkAttrs.rel) {\n\t\t\t\t\t\t\tconst relInput = frame.$el.find('input[data-setting=\"linkRel\"]');\n\t\t\t\t\t\t\tif (relInput.length) {\n\t\t\t\t\t\t\t\trelInput.val(linkAttrs.rel).trigger('change');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('Error setting advanced image attributes:', e);\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t});\n\t\n\t\t\t/* ------------------------------------------------------------------\n\t\t\t* When the user clicks \"Update\" the frame passes a PostImage JSON\n\t\t\t* ----------------------------------------------------------------- */\n\t\t\tframe.on('update', (data) => {\n\t\t\t\tconsole.log('Media frame update data:', data);\n\t\t\t\t\n\t\t\t\tvar sizes = frame.state().attributes.image.attachment.attributes.sizes;\n\t\t\t\tvar sizeType = data.size ? data.size : 'thumbnail';\n\t\t\t\t\n\t\t\t\tvar width = data.width ? data.width : sizes.thumbnail.width;\n\t\t\t\twidth = data.customWidth ? data.customWidth : width;\n\t\t\t\t\n\t\t\t\tvar height = data.height ? data.height : sizes.thumbnail.height;\n\t\t\t\theight = data.customheight ? data.customheight : height;\n\t\n\t\t\t\t// Get extraClasses from the frame's advanced settings\n\t\t\t\t// We check both the data object and try to get from the frame UI\n\t\t\t\tvar extraClass = '';\n\t\t\t\t\n\t\t\t\t// First check if it's in the data object\n\t\t\t\tif (data.extraClasses) {\n\t\t\t\t\textraClass = data.extraClasses;\n\t\t\t\t} \n\t\t\t\t// Then try to get from the form in the frame if not in data\n\t\t\t\telse if (!extraClass) {\n\t\t\t\t\tconst extraClassesInput = frame.$el.find('input[data-setting=\"extraClasses\"]');\n\t\t\t\t\tif (extraClassesInput.length) {\n\t\t\t\t\t\textraClass = extraClassesInput.val() || '';\n\t\t\t\t\t} \n\t\t\t\t\t// Fallback to current extra classes if we couldn't get from form\n\t\t\t\t\telse if (currentAttrs.extraClasses) {\n\t\t\t\t\t\textraClass = currentAttrs.extraClasses;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t/* --------------------------------------------------\n\t\t\t\t* 1. Build the attribute set for our wpimage blot\n\t\t\t\t* ------------------------------------------------- */\n\t\t\t\tconst attrs = {\n\t\t\t\t\tsrc: data.url,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: height,\n\t\t\t\t\talt: data.alt || '',\n\t\t\t\t\ttitle: data.caption || '',\n\t\t\t\t\tclass: `align${data.align || 'none'} size-${sizeType} wp-image-${data.attachment_id} ${extraClass}`.trim(),\n\t\t\t\t};\n\t\n\t\t\t\t/* --------------------------------------------------\n\t\t\t\t* 2. Replace the old blot with a fresh one\n\t\t\t\t* ------------------------------------------------- */\n\t\t\t\tconst newBlot = blot.replaceWith('wpimage', attrs);\n\t\n\t\t\t\t/* --------------------------------------------------\n\t\t\t\t* 3. Apply alignment + link using Quill formats\n\t\t\t\t* ------------------------------------------------- */\n\t\t\t\tconst link = data.linkUrl && data.linkUrl !== 'none' ? data.linkUrl : false;\n\t\n\t\t\t\tquill.formatLine(blotIndex, 1, { align: data.align || false }, 'silent');\n\t\n\t\t\t\t// Apply the link with additional attributes if available\n\t\t\t\tif (link) {\n\t\t\t\t\t// Get link target setting directly from the form if not in data\n\t\t\t\t\tlet linkTarget = '';\n\t\t\t\t\tif (data.linkTargetBlank || data.linkTarget === '_blank') {\n\t\t\t\t\t\tlinkTarget = '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst targetCheckbox = frame.$el.find('input[type=\"checkbox\"][data-setting=\"linkTargetBlank\"]');\n\t\t\t\t\t\tif (targetCheckbox.length && targetCheckbox.is(':checked')) {\n\t\t\t\t\t\t\tlinkTarget = '_blank';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Try multiple ways to get the link class\n\t\t\t\t\tlet linkClass = '';\n\t\t\t\t\t\n\t\t\t\t\t// 1. Check direct property\n\t\t\t\t\tif (data.linkClass) {\n\t\t\t\t\t\tlinkClass = data.linkClass;\n\t\t\t\t\t} \n\t\t\t\t\t// 2. Check alternative property names\n\t\t\t\t\telse if (data.linkClassName) {\n\t\t\t\t\t\tlinkClass = data.linkClassName;\n\t\t\t\t\t}\n\t\t\t\t\t// 3. Try to grab from the UI if still not found\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Try different possible selectors\n\t\t\t\t\t\tconst possibleSelectors = [\n\t\t\t\t\t\t\t'input[data-setting=\"linkClass\"]',\n\t\t\t\t\t\t\t'input[data-setting=\"linkClassName\"]',\n\t\t\t\t\t\t\t'input[name=\"linkClass\"]',\n\t\t\t\t\t\t\t'input.link-class',\n\t\t\t\t\t\t\t'input.link-class-name',\n\t\t\t\t\t\t\t'input[id*=\"linkclass\"]',\n\t\t\t\t\t\t\t'input[id*=\"link-class\"]'\n\t\t\t\t\t\t];\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (const selector of possibleSelectors) {\n\t\t\t\t\t\t\tconst input = frame.$el.find(selector);\n\t\t\t\t\t\t\tif (input.length) {\n\t\t\t\t\t\t\t\tlinkClass = input.val() || '';\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// 4. Fallback to original class if we still don't have it\n\t\t\t\t\tif (!linkClass && linkAttrs.class) {\n\t\t\t\t\t\tlinkClass = linkAttrs.class;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('Final link class value:', linkClass);\n\t\n\t\t\t\t\t// Get link rel directly from the form if not in data\n\t\t\t\t\tlet linkRel = data.linkRel || '';\n\t\t\t\t\tif (!linkRel) {\n\t\t\t\t\t\tconst relInput = frame.$el.find('input[data-setting=\"linkRel\"]');\n\t\t\t\t\t\tif (relInput.length) {\n\t\t\t\t\t\t\tlinkRel = relInput.val() || '';\n\t\t\t\t\t\t} else if (linkAttrs.rel) {\n\t\t\t\t\t\t\tlinkRel = linkAttrs.rel;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Get link title directly from the form if not in data\n\t\t\t\t\tlet linkTitle = data.linkTitle || '';\n\t\t\t\t\tif (!linkTitle) {\n\t\t\t\t\t\tconst linkTitleInput = frame.$el.find('input[data-setting=\"linkTitle\"]');\n\t\t\t\t\t\tif (linkTitleInput.length) {\n\t\t\t\t\t\t\tlinkTitle = linkTitleInput.val() || '';\n\t\t\t\t\t\t} else if (linkAttrs.title) {\n\t\t\t\t\t\t\tlinkTitle = linkAttrs.title;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconst linkData = {\n\t\t\t\t\t\thref: link,\n\t\t\t\t\t\ttitle: linkTitle,\n\t\t\t\t\t\trel: linkRel,\n\t\t\t\t\t\ttarget: linkTarget,\n\t\t\t\t\t\tclass: linkClass\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('Applying link with data:', linkData);\n\t\t\t\t\t\n\t\t\t\t\t// If we have the link module available, use it to apply the link format\n\t\t\t\t\tif (window.link && window.link.applyLinkFormat) {\n\t\t\t\t\t\twindow.link.applyLinkFormat(quill, {index: blotIndex, length: 1}, linkData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Fallback to basic link format\n\t\t\t\t\t\tquill.formatText(blotIndex, 1, { link }, 'silent');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Remove link if previously existed\n\t\t\t\t\tquill.formatText(blotIndex, 1, { link: false }, 'silent');\n\t\t\t\t}\n\t\n\t\t\t\t/* caret back after image */\n\t\t\t\tquill.setSelection(blotIndex + 1, 0, 'silent');\n\t\t\t\tquill.update('user');\n\t\t\t});\n\t\t\n\t\t\tframe.open();\n\t\t});\n\t},\n\t\n\t/**\n\t * Extract extra classes from the image class attribute\n\t * (excludes WordPress-specific classes like alignleft, size-medium, wp-image-123)\n\t * @param {string} classString - The class attribute value\n\t * @returns {string} - Extra classes not related to WordPress image functionality\n\t */\n\tgetExtraClasses: function(classString) {\n\t\tif (!classString) return '';\n\t\t\n\t\t// Split into array of classes\n\t\tconst classes = classString.split(/\\s+/);\n\t\t\n\t\t// Filter out WordPress-specific classes\n\t\tconst extraClasses = classes.filter(cls => {\n\t\t\treturn !cls.match(/^align(left|right|center|none)$/) && // alignment classes\n\t\t\t\t!cls.match(/^size-/) && // size classes\n\t\t\t\t!cls.match(/^wp-image-\\d+$/); // wp-image ID classes\n\t\t});\n\t\t\n\t\treturn extraClasses.join(' ');\n\t},\n\t\n\t/**\n\t * Get link attributes if the image is wrapped in a link\n\t * @param {HTMLElement} imgNode - The image DOM node\n\t * @param {Quill} quill - The Quill instance\n\t * @returns {Object} - Link attributes (url, target, rel, class)\n\t */\n\tgetLinkAttributes: function(imgNode, quill) {\n\t\t// Default empty link attributes\n\t\tconst linkAttrs = {\n\t\t\turl: '',\n\t\t\ttarget: '',\n\t\t\trel: '',\n\t\t\tclass: ''\n\t\t};\n\t\t\n\t\ttry {\n\t\t\t// Get the Quill Blot for the image\n\t\t\tconst imgBlot = Quill.find(imgNode);\n\t\t\tif (!imgBlot) return linkAttrs;\n\t\t\t\n\t\t\t// Get the image position in the document\n\t\t\tconst index = imgBlot.offset(quill.scroll);\n\t\t\tif (index === undefined) return linkAttrs;\n\t\t\t\n\t\t\t// Get the formats at this position - this will include any link format\n\t\t\tconst formats = quill.getFormat(index, 1);\n\t\t\t\n\t\t\t// Check if there's a link format\n\t\t\tif (formats.link) {\n\t\t\t\t// Handle link format being either an object or a string\n\t\t\t\tif (typeof formats.link === 'string') {\n\t\t\t\t\tlinkAttrs.url = formats.link;\n\t\t\t\t} else if (typeof formats.link === 'object') {\n\t\t\t\t\tlinkAttrs.url = formats.link.href || formats.link;\n\t\t\t\t\tlinkAttrs.target = formats.link.target || '';\n\t\t\t\t\tlinkAttrs.rel = formats.link.rel || '';\n\t\t\t\t\tlinkAttrs.class = formats.link.class || '';\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error('Error getting link attributes:', e);\n\t\t}\n\t\t\n\t\treturn linkAttrs;\n\t}\n}\n\nexport { WPMediaToolbar };","var link = {\n\tinit: function() {\n\t\tconst self = this;\n\n\t\tself.previewLink();\n\t\t// console.log('Link module init called');\n\t\t\n\t\t/* ------- 1. register the custom blot once ------- */\n\t\tif (!Quill.__acfLinkBlotReady) {\n\t\t\t// console.log('Registering WPLinkBlot');\n\t\t\tconst BaseLink = Quill.import('formats/link');\n\n\t\t\tclass WPLinkBlot extends BaseLink {\n\t\t\t\tstatic create(v = {}) {\n\t\t\t\t\t// console.log('WPLinkBlot create:', v);\n\t\t\t\t\t// Don't use super.create which adds unwanted attributes\n\t\t\t\t\tlet node;\n\t\t\t\t\t\n\t\t\t\t\tif (typeof v === 'string') {\n\t\t\t\t\t\tnode = document.createElement('a');\n\t\t\t\t\t\tnode.setAttribute('href', v);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode = document.createElement('a');\n\t\t\t\t\t\t// If v.href is an object, stringify it first\n\t\t\t\t\t\tconst href = (v.href && typeof v.href === 'object') ? \n\t\t\t\t\t\t\t(v.href.toString() === '[object Object]' ? '#' : v.href.toString()) : \n\t\t\t\t\t\t\tv.href;\n\t\t\t\t\t\tnode.setAttribute('href', href);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Only add specified attributes, not defaults\n\t\t\t\t\t\tif (v.title) node.setAttribute('title', v.title);\n\t\t\t\t\t\tif (v.rel) node.setAttribute('rel', v.rel);\n\t\t\t\t\t\tif (v.target) node.setAttribute('target', v.target);\n\t\t\t\t\t\tif (v.class) node.setAttribute('class', v.class);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn node;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic formats(node) {\n\t\t\t\t\t// console.log( 'node', node );\n\t\t\t\t\tconst f = { href: node.getAttribute('href') };\n\t\t\t\t\t['title', 'rel', 'target', 'class'].forEach(k => {\n\t\t\t\t\t\tconst v = node.getAttribute(k); \n\t\t\t\t\t\tif (v) f[k] = v;\n\t\t\t\t\t});\n\t\t\t\t\t// console.log('WPLinkBlot formats:', f);\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\t\t\t}\n\t\t\tQuill.register(WPLinkBlot, true);\n\t\t\tQuill.__acfLinkBlotReady = true;\n\t\t\t// console.log('__acfLinkBlotReady - registered custom link blot');\n\t\t}\n\n\t\t/* ------- 2. Add handler to be called after all editors are initialized ------- */\n\t\tdocument.addEventListener('acf-quill-editors-loaded', this.attachToEditors);\n\t\t\n\t\t/* If the event was already fired, call our handler directly */\n\t\tif (window.acfQuillEditorsLoaded) {\n\t\t\t// console.log('Editors already loaded, attaching now');\n\t\t\tthis.attachToEditors();\n\t\t}\n\t\t\n\t\t/* ------- 3. Add event listener for clicking on links ------- */\n\t\tdocument.addEventListener('click', this.handleLinkClick);\n\t},\n\n\tpreviewLink: function() {\n\t\tif( typeof jQuery === 'undefined' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tjQuery( document ).on( 'mouseenter', '.ql-editor a', function(){\n\t\t\tlet thisEl \t= jQuery( this );\n\t\t\tlet href \t= thisEl.attr( 'href' );\n\n\t\t\tlet target \t= thisEl.attr( 'target' ) ?? false;\n\t\t\ttarget \t\t= target == '_blank' ? `, ${acf_quill_field.l10n.tooltip.new_tab}` : '';\n\n\t\t\tlet tooltipPos = 'up'; // right\n\t\t\t// tooltipPos = thisEl.parent().hasClass( 'ql-align-center' ) || thisEl.find( 'img' ).hasClass( 'aligncenter' ) ? 'up' : tooltipPos;\n\t\t\t// tooltipPos = thisEl.parent().hasClass( 'ql-align-right' ) || thisEl.find( 'img' ).hasClass( 'alignright' ) ? 'left' : tooltipPos;\n\n\t\t\tjQuery( this ).attr( 'data-balloon-pos', tooltipPos );\n\t\t\tjQuery( this ).attr( 'aria-label', `${href}${target}` );\n\t\t}).on('mouseleave', '.ql-editor a', function () {\n\t\t\tjQuery( this ).removeAttr( 'data-balloon-pos' );\n\t\t\tjQuery( this ).removeAttr( 'aria-label' );\n\t\t});\n\t},\n\t\n\t/* ----------------------------------------------------------------\n\t *  Handle clicks on links within the editor to edit them\n\t * ---------------------------------------------------------------- */\n\thandleLinkClick(e) {\n\t\t// Only handle clicks inside Quill editors\n\t\tconst editorEl = e.target.closest('.acf-quill-editor');\n\t\tif (!editorEl || !editorEl.__quill) return;\n\t\t\n\t\t// Check if we clicked on a link or within a link\n\t\tconst linkEl = e.target.closest('a');\n\t\tif (!linkEl) return;\n\n\t\t// Check if clicked directly on an image - if so, don't open the link modal\n\t\tif (e.target.tagName === 'IMG') {\n\t\t\t// console.log('Clicked on image inside link - not opening link modal');\n\t\t\treturn; // Exit early, allowing the default image handling\n\t\t}\n\t\t\n\t\t// Prevent default link behavior\n\t\te.preventDefault();\n\t\t\n\t\t// Get the Quill instance\n\t\tconst quill = editorEl.__quill;\n\t\t\n\t\t// Find the link's position within the editor\n\t\tconst linkBlot = Quill.find(linkEl);\n\t\tif (!linkBlot) return;\n\t\t\n\t\tconst index = linkBlot.offset(quill.scroll);\n\t\tif (index === undefined) return;\n\t\t\n\t\t// Get the link's length to select it\n\t\tconst length = linkBlot.length();\n\t\t\n\t\t// Select the link text\n\t\tquill.setSelection(index, length);\n\t\t\n\t\t// Open the link dialog with current attributes\n\t\tconst linkFormat = linkBlot.formats();\n\t\t// console.log('Link clicked, format:', linkFormat);\n\t\t\n\t\tconst attrs = {\n\t\t\thref: linkFormat.link?.href || linkFormat.href || '',\n\t\t\ttitle: linkFormat.link?.title || linkFormat.title || '',\n\t\t\trel: linkFormat.link?.rel || linkFormat.rel || '',\n\t\t\ttarget: linkFormat.link?.target || linkFormat.target || '',\n\t\t\tclass: linkFormat.link?.class || linkFormat.class || ''\n\t\t};\n\n\t\t// console.log( 'attrs values:', attrs );\n\t\t\n\t\t// Open our dialog\n\t\tlink.openDialog(attrs).then(data => {\n\t\t\tif (data === null) return; // Cancelled\n\t\t\t\n\t\t\tif (data === false) {\n\t\t\t\t// Remove link\n\t\t\t\tquill.format('link', false, 'user');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif (!data.href) {\n\t\t\t\t// Empty URL - remove link\n\t\t\t\tquill.format('link', false, 'user');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// console.log( 'openDialog with data values:', data );\n\t\t\t// Apply the link with all attributes\n\t\t\tlink.applyLinkFormat(quill, {index, length}, data);\n\t\t});\n\t},\n\t\n\t/* ----------------------------------------------------------------\n\t *  Directly apply link format to avoid [object Object] issue\n\t * ---------------------------------------------------------------- */\n\tapplyLinkFormat(quill, range, data) {\n\t\t// First remove any existing link\n\t\tquill.formatText(range.index, range.length, 'link', false, 'silent');\n\t\t\n\t\t// Then apply the href as a string first\n\t\tquill.formatText(range.index, range.length, 'link', data.href, 'silent');\n\t\t\n\t\t// Apply additional attributes separately\n\t\tif (data.title || data.rel || data.target || data.class) {\n\t\t\t// We need to access the DOM directly to set these attributes\n\t\t\tconst domNode = document.querySelector('.ql-editor a[href=\"' + data.href + '\"]');\n\t\t\tif (domNode) {\n\t\t\t\tif (data.title) domNode.setAttribute('title', data.title);\n\t\t\t\tif (data.rel) domNode.setAttribute('rel', data.rel);\n\t\t\t\tif (data.target) domNode.setAttribute('target', data.target);\n\t\t\t\tif (data.class) domNode.setAttribute('class', data.class);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Update UI\n\t\tquill.update('user');\n\t\t\n\t\t// console.log('Link applied with direct DOM manipulation');\n\t},\n\t\n\t/* ----------------------------------------------------------------\n\t *  Attach our custom handler to all Quill instances\n\t * ---------------------------------------------------------------- */\n\tattachToEditors() {\n\t\t// console.log('Attaching link handlers to all editors');\n\t\t\n\t\t// Find all Quill instances\n\t\tdocument.querySelectorAll('.acf-quill-editor').forEach(editorElement => {\n\t\t\tif (!editorElement.__quill) return;\n\t\t\t\n\t\t\tconst quill = editorElement.__quill;\n\t\t\t// console.log('Found Quill instance:', quill);\n\t\t\t\n\t\t\t// Override the toolbar module's link handler\n\t\t\tconst toolbar = quill.getModule('toolbar');\n\t\t\tif (toolbar) {\n\t\t\t\t// console.log('Found toolbar, overriding link handler');\n\t\t\t\ttoolbar.handlers.link = function(value) {\n\t\t\t\t\t// console.log('Custom link handler called from toolbar');\n\t\t\t\t\tlink.toolbarHandler.call(this);\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\t// Also override the keyboard shortcut\n\t\t\tquill.keyboard.addBinding({ key: 'K', shortKey: true }, function(range, context) {\n\t\t\t\t// console.log('Link keyboard shortcut pressed');\n\t\t\t\tif (toolbar) {\n\t\t\t\t\tlink.toolbarHandler.call(toolbar);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\t/* ----------------------------------------------------------------\n\t *  real handler – runs with `this` === toolbar instance\n\t * ---------------------------------------------------------------- */\n\ttoolbarHandler() {\n\t\t// console.log('toolbarHandler called');\n\t\tconst quill = this.quill;\n\t\tif (!quill) {\n\t\t\tconsole.error('No quill instance in toolbar');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst range = quill.getSelection(true);\n\t\tif (!range) {\n\t\t\tconsole.warn('No selection range');\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('Getting format at range:', range);\n\t\tconst format = quill.getFormat(range);\n\t\t// console.log('Current format:', format);\n\n\t\t// Get current link attributes\n\t\tconst linkAttrs = {\n\t\t\thref: format.link?.href || format.link || '',\n\t\t\ttitle: format.link?.title || '',\n\t\t\trel: format.link?.rel || '',\n\t\t\ttarget: format.link?.target || '',\n\t\t\tclass: format.link?.class || ''\n\t\t};\n\t\t\n\t\t// console.log('Opening dialog with:', linkAttrs);\n\t\t\n\t\tlink.openDialog(linkAttrs).then(data => {\n\t\t\t// console.log('Dialog returned:', data);\n\t\t\t\n\t\t\tif (data === null) {\n\t\t\t\t// console.log('Dialog cancelled');\n\t\t\t\treturn; // User cancelled\n\t\t\t}\n\t\t\t\n\t\t\tif (data === false) {\n\t\t\t\t// console.log('Removing link');\n\t\t\t\tquill.format('link', false, 'user');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif (!data.href) {\n\t\t\t\t// console.log('Empty URL, removing link');\n\t\t\t\tquill.format('link', false, 'user');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// console.log('Applying link format:', data);\n\t\t\tlink.applyLinkFormat(quill, range, data);\n\t\t\t// console.log('Setting selection after link');\n\t\t\tquill.setSelection(range.index + range.length, 0, 'silent');\n\t\t});\n\t},\n\n\t/* ----------------------------------------------------------------\n\t *  vanilla-JS modal that returns { href,title,rel,target,class }\n\t * ---------------------------------------------------------------- */\n\topenDialog(initial) {\n\t\t// console.log('openDialog called with:', initial);\n\t\t\n\t\treturn new Promise(resolve => {\n\t\t\t// Check if there's an existing modal and remove it first\n\t\t\tconst existingModal = document.querySelector('.acf-quill-link-modal');\n\t\t\tif (existingModal) {\n\t\t\t\t// console.log('Removing existing modal');\n\t\t\t\texistingModal.remove();\n\t\t\t}\n\n\t\t\tconst wrap = document.createElement('div');\n\t\t\twrap.className = 'acf-quill-link-modal';\n\t\t\t\n\t\t\tlet linkTemplate = acf_quill_field.link_template ?? '';\n\n\t\t\t\tlinkTemplate = linkTemplate.replace( '{{HREF}}', initial.href );\n\t\t\t\tlinkTemplate = linkTemplate.replace( '{{TITLE}}', initial.title );\n\t\t\t\tlinkTemplate = linkTemplate.replace( '{{CLASS}}', initial.class );\n\t\t\t\t\n\t\t\t\tlinkTemplate = linkTemplate.replace( '{{TARGET}}', initial.target === '_blank' ? 'checked': '' );\n\n\t\t\t\tlinkTemplate = linkTemplate.replace( '{{REL}}', initial.rel );\n\n\t\t\t\tlinkTemplate = linkTemplate.replace( '{{NO_FOLLOW}}', initial.rel?.includes( 'nofollow' ) ? 'checked': '' );\n\t\t\t\tlinkTemplate = linkTemplate.replace( '{{SPONSORED}}', initial.rel?.includes( 'sponsored' ) ? 'checked': '' );\n\n\t\t\t// return to HTML\n\t\t\twrap.innerHTML = linkTemplate;\n\n\t\t\tconst form = wrap.querySelector('form');\n\t\t\tconst relInput = form.elements.rel;\n\t\t\tconst relNofollowCheckbox = form.elements.rel_nofollow;\n\t\t\tconst relSponsoredCheckbox = form.elements.rel_sponsored;\n\t\t\t\n\t\t\t// Handle rel checkbox changes\n\t\t\tconst updateRelInput = () => {\n\t\t\t\tlet relValues = relInput.value.split(' ').filter(val => \n\t\t\t\t\tval !== 'nofollow' && val !== 'sponsored' && val.trim()\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\tif (relNofollowCheckbox.checked) relValues.push('nofollow');\n\t\t\t\tif (relSponsoredCheckbox.checked) relValues.push('sponsored');\n\t\t\t\t\n\t\t\t\trelInput.value = relValues.join(' ').trim();\n\t\t\t};\n\t\t\t\n\t\t\trelNofollowCheckbox.addEventListener('change', updateRelInput);\n\t\t\trelSponsoredCheckbox.addEventListener('change', updateRelInput);\n\t\t\t\n\t\t\t// Close modal functions\n\t\t\tconst close = res => { \n\t\t\t\t// console.log('Closing dialog with result:', res);\n\t\t\t\twrap.remove(); \n\t\t\t\tresolve(res); \n\t\t\t};\n\n\t\t\t// Click handlers\n\t\t\twrap.addEventListener('click', e => {\n\t\t\t\tif (e.target.dataset.act === 'cancel' || e.target === wrap) {\n\t\t\t\t\tclose(null);\n\t\t\t\t} else if (e.target.dataset.act === 'remove') {\n\t\t\t\t\tclose(false);  // Signal to remove the link\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Submit handler\n\t\t\tform.addEventListener('submit', e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst fd = new FormData(form);\n\t\t\t\tconst res = {\n\t\t\t\t\thref: fd.get('href').trim(),\n\t\t\t\t\ttitle: fd.get('title').trim(),\n\t\t\t\t\tclass: fd.get('class').trim()\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t// Only add rel if it's actually filled\n\t\t\t\tconst rel = fd.get('rel').trim();\n\t\t\t\tif (rel) {\n\t\t\t\t\tres.rel = rel;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Only add target if checkbox is checked\n\t\t\t\tif (fd.get('target')) {\n\t\t\t\t\tres.target = '_blank';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// console.log('Form submitted with values:', res);\n\t\t\t\tclose(res);\n\t\t\t});\n\n\t\t\t// console.log('Appending modal to body');\n\t\t\tdocument.body.appendChild(wrap);\n\t\t\tform.elements.href.focus();\n\t\t\t\n\t\t\t// Initial setup for rel values\n\t\t\tupdateRelInput();\n\t\t});\n\t}\n};\n\nexport { link };","import { loader } from './loader.js';\n\n/**\n * Custom inline formatting for QuillJS\n * Adds a dropdown with custom formatting options from acf_quill_field.custom_options\n */\nvar customs = {\n    init: function() {\n        const self = this;\n\n\t\tif( acf_quill_field.load_custom_options == false ) {\n\t\t\treturn false;\n\t\t}\n        \n        // Register custom inline blot when Quill is available\n        if (typeof Quill !== 'undefined') {\n            self.registerCustomInlineBlot();\n        } else {\n            // Wait for Quill to be available\n            document.addEventListener('DOMContentLoaded', () => {\n                if (typeof Quill !== 'undefined') {\n                    self.registerCustomInlineBlot();\n                } else {\n                    console.warn('Quill not found. Custom inline formatting will not be available.');\n                }\n            });\n        }\n    },\n\n    registerCustomInlineBlot: function() {\n        const self = this;\n        \n        // Get required Quill classes\n        const Inline = Quill.import('blots/inline');\n        \n        // Create custom blot class\n        class CustomInlineBlot extends Inline {\n            static create(value) {\n                let node = super.create();\n                \n                // Set the data-value attribute\n                node.setAttribute('data-value', value);\n                \n                // Find matching custom option to get the class\n                if (window.acf_quill_field && window.acf_quill_field.custom_options) {\n                    const option = window.acf_quill_field.custom_options.find(opt => opt.value === value);\n                    if (option && option.class) {\n                        node.classList.add(option.class);\n                    }\n                }\n                \n                return node;\n            }\n            \n            static formats(node) {\n                return node.getAttribute('data-value');\n            }\n        }\n        \n        // Register blot name and tag\n        CustomInlineBlot.blotName = 'custom-inline';\n        CustomInlineBlot.tagName = 'span';\n        \n        // Register with Quill\n        Quill.register(CustomInlineBlot);\n        \n        // Hook into loader's initQuillEditors to modify toolbar options\n        self.extendLoaderInitQuillEditors();\n    },\n    \n    extendLoaderInitQuillEditors: function() {\n        const self = this;\n        \n        // Override the existing initQuillEditors method\n        const originalInitQuillEditors = loader.initQuillEditors;\n        \n        // We're going to replace the original method with our own version\n        loader.initQuillEditors = function() {\n            // Call the original function implementation first to setup basic editors\n            originalInitQuillEditors.call(this);\n            \n            // Now enhance the editors with our custom format\n            document.querySelectorAll('.acf-quill-editor').forEach((el) => {\n                // Skip already enhanced editors\n                if (el.dataset.customFormatInit === 'true') return;\n                \n                // Get the Quill instance that was created by the original function\n                const quill = el.__quill;\n                if (!quill) return;\n                \n                // Make sure we have custom options available\n                if (!window.acf_quill_field || !window.acf_quill_field.custom_options || \n                    window.acf_quill_field.custom_options.length === 0) {\n                    return;\n                }\n                \n                // Register Format Button\n                // We need to manually create the buttons since using the \n                // toolbar config alone isn't working correctly\n                const toolbar = quill.getModule('toolbar');\n                if (!toolbar) return;\n                \n                // Create a custom dropdown format button\n                const formatGroup = document.createElement('span');\n                formatGroup.className = 'ql-formats';\n                \n                const customSelect = document.createElement('select');\n                customSelect.className = 'ql-custom-inline';\n                \n                // Add empty default option\n                const emptyOption = document.createElement('option');\n                emptyOption.value = '';\n                emptyOption.text = 'Format...';\n                emptyOption.selected = true;\n                customSelect.appendChild(emptyOption);\n                \n                // Add \"Remove Format\" option\n                const removeOption = document.createElement('option');\n                removeOption.value = 'remove';\n                removeOption.text = acf_quill_field.l10n.tooltip.remove_format;\n                customSelect.appendChild(removeOption);\n                \n                // Add all custom format options\n                window.acf_quill_field.custom_options.forEach(option => {\n                    const optElement = document.createElement('option');\n                    optElement.value = option.value;\n                    optElement.text = option.name;\n                    customSelect.appendChild(optElement);\n                });\n                \n                // Add change handler\n                customSelect.addEventListener('change', function(e) {\n                    const value = e.target.value;\n                    const range = quill.getSelection(true);\n                    \n                    if (range && range.length > 0) {\n                        if (value === '' || value === 'remove') {\n                            // Remove only our custom format\n                            quill.formatText(range.index, range.length, 'custom-inline', false);\n                        } else {\n                            quill.formatText(range.index, range.length, 'custom-inline', value);\n                        }\n                    }\n                    \n                    // Reset dropdown to default after applying\n                    setTimeout(() => {\n                        customSelect.value = '';\n                    }, 10);\n                });\n                \n                formatGroup.appendChild(customSelect);\n                \n                // Find the toolbar container and add our button\n\t\t\t\tconst toolbarContainer = el.closest( '.acf-field[data-type=\"quill\"]' ).querySelector('.ql-toolbar');\n                if (toolbarContainer) {\n                    // Find the wp-media button to insert before it\n                    const wpMediaButtonContainer = toolbarContainer.querySelector('.ql-wp-media').closest('.ql-formats');\n                    \n                    if (wpMediaButtonContainer) {\n                        // Insert our format button before the wp-media button\n                        toolbarContainer.insertBefore(formatGroup, wpMediaButtonContainer);\n                    } else {\n                        // Fallback - just append to the toolbar\n                        toolbarContainer.appendChild(formatGroup);\n                    }\n                    \n                    // Add tooltip\n                    if (window.acf_quill_field && window.acf_quill_field.l10n && window.acf_quill_field.l10n.tooltip) {\n                        this.acfQuillFieldAddTooltip(customSelect, acf_quill_field.l10n.tooltip.custom_format);\n                    }\n                }\n                \n                // Mark this editor as enhanced\n                el.dataset.customFormatInit = 'true';\n            });\n        };\n    },\n};\n\nexport { customs };","import { loader } from './components/loader.js';\nimport { WPMedia } from './components/wpmedia.js';\nimport { WPMediaToolbar } from './components/wpmedia-toolbar.js';\nimport { link } from './components/link.js';\nimport { customs } from './components/customs.js';\n\nwindow.mainAcfQuillFieldPlugin = {\n\tinit: function () {\n\t\tvar self = this;\n\n\t\tWPMedia.init();\n\t\tWPMediaToolbar.init();\n\t\t\n\t\twindow.link = link; // Make sure it's globally available\n\t\tlink.init();\n\t\t\n\t\tcustoms.init();\n\t\t\n\t\tloader.init();\n\t},\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\tmainAcfQuillFieldPlugin.init();\n});"],"names":["loader","observer","unsavedChanges","init","self","this","initQuillEditors","observe","setupUnsavedChangesWarning","setupSaveListener","window","addEventListener","e","message","returnValue","MutationObserver","mutations","mutation","addedNodes","length","forEach","node","nodeType","quillBlocks","querySelectorAll","document","body","childList","subtree","el","dataset","quillInit","textarea","nextElementSibling","acfQuillFieldInput","parentElement","toolbarContainer","buildToolbarFromConfig","Embed","Quill","import","Delta","register","static","create","super","formats","value","optimize","options","modules","toolbar","container","handlers","link","toolbarHandler","call","clipboard","matchVisual","wpImageToolbar","onEdit","img","blot","index","quillInstance","theme","placeholder","acf_quill_field","l10n","quill","__quill","editorElement","querySelector","key","shiftKey","preventDefault","stopPropagation","stopImmediatePropagation","selection","getSelection","getLength","isAtEnd","line","offset","getLine","isEmptyLine","getText","trim","insertEmbed","setTimeout","setSelection","htmlContent","processedHtml","replace","delta","convert","html","setContents","currentContents","getContents","newOps","op","ops","insert","includes","parts","split","i","push","attributes","break","newDelta","originalTextChange","emitter","listeners","oldContents","source","modifiedOps","map","modifiedDelta","on","oldDelta","updateWordCount","htmlOutput","getSemanticHTML","triggerChange","wp","data","select","createEditorInfoElements","range","oldRange","updatePathDisplay","prepareTooltips","acfQuillEditorsLoaded","dispatchEvent","Event","changeEvent","bubbles","inputEvent","notifyGutenberg","dispatch","editPost","modified","console","warn","aqfL10N","infoContainer","createElement","className","wordCountEl","textContent","words","word_count","pathDisplayEl","appendChild","closest","editorWrapper","parentNode","insertBefore","nextSibling","text","wordCount","path","leaf","getLeaf","pathParts","currentNode","domNode","Node","TEXT_NODE","ELEMENT_NODE","classList","contains","tagName","toLowerCase","displayName","firstLi","getAttribute","classNames","Array","from","filter","startsWith","join","unshift","error","not_available","tooltip","bold","italic","underline","strike","color","background","left","justify","center","right","ul","ol","indent_plus","indent_minus","script_sup","script_sub","blockquote","code","code_block","clean","wp_media","item","acfQuillFieldAddTooltip","element","setAttribute","defaultToolbar","toolbar_config","load_toolbar_config","config","formatOptions","format_options","group","obj","resetUnsavedChanges","target","id","action","name","subscribe","setupListener","wasSaving","wasAutosaving","isSaving","isSavingPost","isAutosaving","isAutosavingPost","checkEditorReady","setInterval","clearInterval","WPMedia","wpmediaIcon","Toolbar","BaseImage","arguments","undefined","src","Object","entries","_ref","k","v","reduce","o","a","DEFAULTS","openMedia","frame","media","state","library","type","multiple","$el","addClass","attachment","get","first","atts","toJSON","display","linkToFile","url","string","props","linkUrl","sizeData","sizes","size","attrs","width","height","alt","title","class","align","insertText","formatText","open","WPMediaToolbar","dataBalloon","iconList","AlignNone","AlignLeft","AlignCenter","AlignRight","Edit","Remove","Tooltip","constructor","bounds","root","add","innerHTML","none","edit","delete","alignBtns","btnEdit","btnRemove","find","scroll","_updateActiveAlign","_position","hideLinkToolTip","show","requestAnimationFrame","hide","hideMediaFocus","btn","c","remove","formatLine","deleteText","openImageDetails","style","reposition","passive","current","exec","toggle","imgRect","getBoundingClientRect","boundsRect","offsetWidth","top","offsetHeight","hideMediaTooltip","getWpImageId","str","match","Number","imgNode","blotIndex","currentAttrs","extraClasses","getExtraClasses","linkAttrs","getLinkAttributes","alignMatch","sizeMatch","fetch","done","editing","metadata","attachment_id","caption","linkTarget","linkRel","rel","linkClass","targetCheckbox","prop","trigger","extraClassesInput","val","possibleSelectors","linkClassInput","selector","input","log","set","linkTitleInput","relInput","image","sizeType","thumbnail","customWidth","customheight","extraClass","replaceWith","linkTargetBlank","is","linkClassName","linkTitle","linkData","href","applyLinkFormat","update","classString","cls","imgBlot","getFormat","previewLink","__acfLinkBlotReady","BaseLink","WPLinkBlot","toString","f","attachToEditors","handleLinkClick","jQuery","thisEl","attr","new_tab","removeAttr","editorEl","linkEl","linkBlot","linkFormat","openDialog","then","format","getModule","keyboard","addBinding","shortKey","context","initial","Promise","resolve","existingModal","wrap","linkTemplate","link_template","form","elements","relNofollowCheckbox","rel_nofollow","relSponsoredCheckbox","rel_sponsored","updateRelInput","relValues","checked","close","res","act","fd","FormData","focus","customs","load_custom_options","registerCustomInlineBlot","Inline","CustomInlineBlot","custom_options","option","opt","blotName","extendLoaderInitQuillEditors","originalInitQuillEditors","customFormatInit","formatGroup","customSelect","emptyOption","selected","removeOption","remove_format","optElement","wpMediaButtonContainer","custom_format","mainAcfQuillFieldPlugin"],"sourceRoot":""}